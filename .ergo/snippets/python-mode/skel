# -*- mode: snippet -*-
# name: skel
# key: sk
# expand-env: ((yas/indent-line 'fixed))
# --
#!/usr/bin/env python3

"""
${1:Utility}
"""

from argparse import ArgumentParser
import os
from pathlib import Path
PROJECT_ROOT = Path(__file__).absolute().parents[1]
import sys; sys.path.append(str(PROJECT_ROOT))  # noqa


class $1:
    def __init__(self, *args, **kwargs):
        self.$2 = kwargs['$2']
        self.$3 = kwargs['$3']
        self.$4 = kwargs['$4']

        return

    def run(self):
        """
        Implement the utility's main functionality here
        """

        print(self.$2)
        print(self.$3)
        print(self.$4)	

        return 0


def main():
    description = '${1:Utility}'
    parser = ArgumentParser(description=description)
    parser.add_argument('-${2:$(if (> (length yas/text) 0) (substring yas/text 0 1))}', '--${2:input}', dest='$2', required=True)
    parser.add_argument('-${3:$(if (> (length yas/text) 0) (substring yas/text 0 1))}', '--${3:output}', dest='$3', required=True)
    parser.add_argument('-${4:$(if (> (length yas/text) 0) (substring yas/text 0 1))}', '--${4:switch}', dest='$4')
    $0
    args = parser.parse_args()
    $2, $3, $4 = args.$2, args.$3, args.$4

    ${1:$(if (> (length yas/text) 0) (downcase yas/text))} = $1($2=$2, $3=$3, $4=$4)
    try:
        retval = ${1:$(if (> (length yas/text) 0) (downcase yas/text))}.run()
    except BrokenPipeError:
        devnull = os.open(os.devnull, os.O_WRONLY)
        os.dup2(devnull, sys.stdout.fileno())
        retval = 1

        return retval


if __name__ == '__main__':
    retval = main()
    sys.exit(retval)
